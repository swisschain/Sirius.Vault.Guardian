syntax = "proto3";

option csharp_namespace = "Swisschain.Sirius.GuardianValidatorApi";
option java_package = "io.swisschain.sirius.guardianApi.generated.validatorApprovalRequests";

package swisschain.sirius.GuardianValidatorApi;

service Validators {
  rpc CreateApprovalRequest (CreateApprovalRequestRequest) returns (CreateApprovalRequestResponse);
  rpc GetApprovalResults (GetApprovalResultsRequest) returns (GetApprovalResponse);
  rpc AcknowledgeResult (AcknowledgeResultRequest) returns (AcknowledgeResultResponse);
  rpc GetActiveValidators (ActiveValidatorsRequest) returns (ActiveValidatorsResponse);
}

// CreateApprovalRequest

message CreateApprovalRequestRequest {
  string request_id = 1;
  string tenant_id = 2;
  string validation_request_id = 3;
  string validator_id = 4;
  string message = 5;
  string key = 6;
  string nonce = 7;
}

message CreateApprovalRequestResponse {
  ValidatorsApiError error = 1;
}

// GetApprovalResults

message GetApprovalResultsRequest {
}

message GetApprovalResponse {
  message ApprovalResponse {
    string validator_id = 1;
    string validation_request_id = 2;
    string message = 3;
    string device_info = 4;
    string ip = 5;
  }

  repeated ApprovalResponse payload = 1;
  ValidatorsApiError error = 2;
}

// AcknowledgeResult

message AcknowledgeResultRequest {
  string transferSigningRequestId = 1;
  string validatorId = 2;
}

message AcknowledgeResultResponse {
  ValidatorsApiError error = 1;
}

// GetActiveValidators

message ActiveValidatorsRequest {
  string tenant_id = 1;
}

message ActiveValidatorsResponse {
  message ActiveValidator {
    string validatorId = 1;
    string validatorPublicKeyPem = 2;
  }

  ValidatorsApiError error = 1;
  repeated ActiveValidator ActiveValidatorsRequest = 2;
}

// ********* errors *********

message ValidatorsApiError {
  enum ErrorCodes {
    Unknown = 0;
    InternalServerError = 1;
  }

  ErrorCodes code = 1;
  string message = 2;
}