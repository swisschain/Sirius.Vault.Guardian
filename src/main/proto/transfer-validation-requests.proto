syntax = "proto3";

option csharp_namespace = "Swisschain.Sirius.VaultApi.ApiContract.TransferValidationRequests";
option java_package = "io.swisschain.sirius.vaultApi.generated.transfer_validation_requests";

package swisschain.sirius.vaultApi.transferValidationRequests;

import "common.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

service TransferValidationRequests {
  rpc Get (GetTransferValidationRequestsRequest) returns (GetTransferValidationRequestsResponse);
  rpc Confirm (ConfirmTransferValidationRequestRequest) returns (ConfirmTransferValidationRequestResponse);
  rpc Reject (RejectTransferValidationRequestRequest) returns (RejectTransferValidationRequestResponse);
}

// Get

message GetTransferValidationRequestsRequest {
}

message GetTransferValidationRequestsResponse {
  oneof body {
    GetTransferValidationRequestsResponseBody response = 1;
    GetTransferValidationRequestsErrorResponseBody error = 2;
  }
}

message GetTransferValidationRequestsResponseBody {
  repeated TransferValidationRequest requests = 1;
}

message GetTransferValidationRequestsErrorResponseBody {

  enum ErrorCode {
    UNKNOWN = 0;
    INVALID_PARAMETERS = 1;
  }

  ErrorCode error_code = 1;
  string error_message = 2;
}

message TransferValidationRequest {
  int64 id = 1;
  string tenant_id = 2;
  int64 vault_id = 3;
  Transfer transfer = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message Transfer {
  int64 id = 1;
  .swisschain.sirius.vaultApi.common.Blockchain blockchain = 2;
  TransferSource source = 3;
  TransferDestination destination = 4;
  .swisschain.sirius.vaultApi.common.Unit value = 5;
  .swisschain.sirius.vaultApi.common.Unit fee = 6;
  TransferContext context = 7;
}

message TransferSource {
  string address = 1;
  .swisschain.sirius.vaultApi.common.BrokerAccount brokerAccount = 2;
  .swisschain.sirius.vaultApi.common.Account account = 3;
}

message TransferDestination {
  string address = 1;
  google.protobuf.StringValue tag = 2;
  .swisschain.sirius.vaultApi.common.NullableTagType tag_type = 3;
  .swisschain.sirius.vaultApi.common.BrokerAccount brokerAccount = 4;
  .swisschain.sirius.vaultApi.common.Account account = 5;
}

message TransferContext {
  google.protobuf.StringValue document = 1;
  google.protobuf.StringValue document_version = 2;
  google.protobuf.StringValue signature = 3;
  google.protobuf.StringValue withdrawal_reference_id = 4;
  string component = 5;
  string operation_type = 6;
  .swisschain.sirius.vaultApi.common.RequestContext request_context = 7;
}

// Confirm

message ConfirmTransferValidationRequestRequest {
  string idempotency_id = 1;
  int64 transfer_validation_request_id = 2;
  string document = 3;
  string signature = 4;
  string host_process_id = 5;
}

message ConfirmTransferValidationRequestResponseBody {
}

message ConfirmTransferValidationRequestErrorResponseBody {

  enum ErrorCode {
    UNKNOWN = 0;
    INVALID_PARAMETERS = 1;
    INVALID_STATE = 2;
  }

  ErrorCode error_code = 1;
  string error_message = 2;
}

message ConfirmTransferValidationRequestResponse {
  oneof body {
    ConfirmTransferValidationRequestResponseBody response = 1;
    ConfirmTransferValidationRequestErrorResponseBody error = 2;
  }
}

// Reject

message RejectTransferValidationRequestRequest {

  enum RejectionReason {
    OTHER = 0;
    REJECTED_BY_POLICY = 1;
  }

  string idempotency_id = 1;
  int64 transfer_validation_request_id = 2;
  RejectionReason rejection_reason = 3;
  string rejection_reason_message = 4;
  string document = 5;
  string signature = 6;
  string host_process_id = 7;
}

message RejectTransferValidationRequestResponse {
  oneof body {
    RejectTransferValidationRequestResponseBody response = 1;
    RejectTransferValidationRequestErrorResponseBody error = 2;
  }
}

message RejectTransferValidationRequestResponseBody {
}

message RejectTransferValidationRequestErrorResponseBody {

  enum ErrorCode {
    UNKNOWN = 0;
    INVALID_PARAMETERS = 1;
    INVALID_STATE = 2;
  }

  ErrorCode error_code = 1;
  string error_message = 2;
}
